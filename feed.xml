<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2022-05-20T01:02:03+02:00</updated><id>/feed.xml</id><title type="html">v2 Blog</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><entry><title type="html">C++ mask file Generator for Linux</title><link href="/dev/2022/05/19/C++-mask-file-Generator-for-Linux.html" rel="alternate" type="text/html" title="C++ mask file Generator for Linux" /><published>2022-05-19T23:46:05+02:00</published><updated>2022-05-19T23:46:05+02:00</updated><id>/dev/2022/05/19/C++%20mask%20file%20Generator%20for%20Linux</id><content type="html" xml:base="/dev/2022/05/19/C++-mask-file-Generator-for-Linux.html"><![CDATA[<h2 id="c-mask-file-generator-for-linux">C++ mask file generator for Linux</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#include &lt;iostream&gt;
#include &lt;string&gt;
#include &lt;fstream&gt;
#include &lt;sstream&gt;
#include &lt;vector&gt;
#include &lt;cstring&gt;
#include &lt;algorithm&gt;
#include &lt;typeinfo&gt;
#include &lt;unistd.h&gt;
using namespace std;
int main(){
	string action;
	int error=0;
    char mychar[1];
    char mychar2[1];
    fstream fout2;
    fout2.open("temp.bin", ios::out |ios::app);
	ifstream urandom;
	urandom.open("/dev/urandom", ios::in | ios::binary);
	//ss &lt;&lt; getline(urandom, byte, length);
        string s;
    const string maskName="temp.bin";
    while(error!=1){
	while(!(cin.get(mychar[0]) &amp;&amp; urandom.get(mychar2[0]))){
		error = 1;
		break;

	}
        if(error == 0){
		cout &lt;&lt; (char)(mychar[0] ^ (char)mychar2[0]);
		fout2 &lt;&lt; (char)mychar2[0];
	}
    }
    fout2.close();
    const string s2="mv temp.bin $(shasum temp.bin | awk '{print $1}')";
    //rename (maskName.c_str(), s3.c_str());
    system(s2.c_str());

}

</code></pre></div></div>]]></content><author><name></name></author><category term="Dev" /><summary type="html"><![CDATA[C++ mask file generator for Linux]]></summary></entry></feed>